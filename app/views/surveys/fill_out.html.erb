<div class="container">
  Fill out Survey page
  <div>
  	<h1 data-bind="text: title"></h1>
  	<div data-bind="foreach: inputs">
  		<div data-bind="style: { opacity: $parent.currentQuestion()==$index() ? 1 : 0.5 }">
	  		<h4 data-bind="text: label"></h4>
	  		<div data-bind="if: input_type=='text'">
	  			<textarea data-bind="value: $parent.surveyAnswers[id]" type="textarea"></textarea>
	  		</div>

	  		<div data-bind="if: input_type=='select1'">
	  			<select data-bind="foreach: options, value: $parent.surveyAnswers[id]">
	  				<option data-bind="text: $data">
	  				</option>
	  			</select>
	  		</div>

	  		<div data-bind="if: input_type=='image'">
	  			<input fata-bind="value: $parent.surveyAnswers[id]" type="file" accept="image/*" />
	  		</div>

	  		<div data-bind="if: input_type=='location'">
	  			<div data-bind="style:{width:'300px',height:'300px'},map: $parent.position"></div>
	  		</div>
	  	</div>
  	</div>
  	<button data-bind="click: result">Click here</button>
  	<button data-bind="click: previous">^</button>
  	<button data-bind="click: next">v</button>
  </div>
</div>

<script type="text/javascript">
  PT.retrieveSurveyDefinition(<%= @code %>, function(data){
  	//Data to send out
  	console.log(data)
  	var surveyAnswers ={}
  	for(i=0;i<data.inputs.length;i++){
  		surveyAnswers[data.inputs[i].id] = ko.observable('Not Answered')
  	}

  	var currentPosition = ko.observable({
  		lat:ko.observable(0), 
		lng:ko.observable(0)
  	})

	var viewModel = {
	  		title : data.title,
	  		inputs : data.inputs,
	  		id: data.id,
	  		surveyAnswers : surveyAnswers,
	  		result: function(){
	  			var x = ko.toJS(this)
	  			var id = this.id
	  			var answers = []
	  			for(var i in x.surveyAnswers){
	  				answers.push(x.surveyAnswers[i])
	  			}
	  			var data = {survey_id: id,answers: answers}
	  			console.log(data)
	  			$.ajax({
	  				url: "http://dev.aggregate.promisetracker.org/responses",
	  				type: 'post', 
	  				data: data,
	  				headers: { Authorization : '85823f6d6a9167b1ff947a18b176c09a'},
	  				dataType: 'json',
	  				success : function(returnedData) {
	  				  	console.info(returnedData)   
	  				}})
	  		},
	  		currentQuestion: ko.observable(0),
	  		next: function(){
	  			var previousVal = this.currentQuestion();
	  			this.currentQuestion(previousVal + 1)
	  		},
	  		previous: function(){
	  			var previousVal = this.currentQuestion();
	  			this.currentQuestion(previousVal - 1)
	  		},
	  		position : currentPosition
	  	}

	navigator.geolocation.getCurrentPosition(
		function(position){
		 	viewModel.position =  ko.observable({
		 		 	lat:ko.observable(position.coords.latitude), 
		 		 	lng:ko.observable(position.coords.longitude)
		 		 })

		 	ko.bindingHandlers.map = {
		  		init: function(element, valueAccessor){
		  			var mapObj = ko.utils.unwrapObservable(valueAccessor());
		  			var latLng = new google.maps.LatLng(
		  				ko.utils.unwrapObservable(mapObj.lat),
		  				ko.utils.unwrapObservable(mapObj.lng))
		  			var mapOptions = {
		  				center: latLng,
		  				zoom: 10,
		  			}
		  			mapObj.googleMap = new google.maps.Map(element, mapOptions)
		  			mapObj.googleMap = new google.maps.Marker({position:latLng,
		  				map:mapObj.googleMap
		  			})
		  		}
		  	}
		    ko.applyBindings(viewModel)
		}
	);



  	
  });
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAYrqOLLhjp7hWkDBf7NmrVxw-IPt3p-e0">
</script>
